Chapter 1: SQL的基本应用




Lecture 1:
SQL: Structure Query Language (SQL) is a speicla purpose programming language.
Database: A container to help organize data / a way to efficiently store and retrieve data.

User --SQL---> Database

Why Learnin SQL:
I. At least 80% - 90% of data analysis work is to wrtie SQL query.
II. Almost every data-related job interviews will test SQL.
III. Most of candidates will fail SQL interviews although they have learned it by themselves.

Database ----------> Dataset    ------------------> Model
·Oracle              ·SAS dataset                   ·Regression
·AWS/Google          ·CSV                           ·Decision tree
                     ·txt       ------------------> Busnies Analysis 
                                                    ·Excel
                                                    ·Tableau





Lecture 2:

SQL Server Installation: MYSQLWorkbench




Lecture 3:

SQL Statement:

SELECT:（选择）
Ex. SELECT first_name, last_name FROM contacts;

INSERT: （插入）
Ex. INSERT INTO contacts(first_name, last_name)
        VALUES('Fritz', 'Onion');

UPDATE: （修改）
Ex. UPDATE contacts SET last_name = 'Ahern' WHERE id=1;

DELETE: （删除）
Ex. DELETE FROM contacts where id = 2;



SELECT:

Ex. SELECT prod_id, prod_name, prod_price FROM Products;

Ex. SELECT * FROM Products; ---> effective but not recommended (read a huge amount of data)

Ex. SELECT * FROM Products limit 5; ---> limit the amount of data we select

Ex. SELECT DISTINCT vend_id FROM Products ---> avoid selecting repetitive vend_id data from database

Ex. SELECT DISTINCT vend_id, prod_id FROM Products ---> avoid selecting repetitive pairs of vend_id and prod_id from database



Comment:

SELECT prod_id, prod_name, prod_price FROM Products  -- this is a comment

#This is also a comment

/* This is selecting mutiple lines
   as comments */











Chapter 2: SQL中的筛选和函数使用




Lecture 1:


Order By Clause:  (default ascending sort order)

ORDER BY takes the name of one or more columns by which to sort the output.

Ex. SELECT prod_name FROM Products ORDER BY prod_name;  (sort by one single conlumn order)

Ex. SELECT prod_id, prod_price, prod_name FROM Products ORDER BY prod_price, prod_name;  (sort by mutiple columns order)

Ex. SELECT prod_id, prod_price, prod_name FROM Products ORDER BY 2, 3;  (sort by relative position column)


Order by descending order:

SELECT prod_id, prod_price, prod_name FROM Products ORDER BY prod_price DESC;


Filter Data by using Where Clause:

SELECT ---> FROM ----> WHERE ---> ORDER BY

Ex. SELECT prod_name, prod_price FROM Products WHERE prod_price = 3.49;

Ex. SELECT prod_name, prod_price FROM Products WHERE prod_price BETWEEN 5 AND 10; (inclusive)

Ex. SELECT * From Customers WHERE Cust_email is not NULL; ("is not NUll" refers to non-empty blank)

Ex. SELECT prod_name, prod_price FROM Products WHERE vend_id = 'DLL01" AND prod_price <= 4;